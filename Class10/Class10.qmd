---
title: "Class 10: Structural Bioinformatics pt. 1"
author: "Carly Chang (A16843962)"
format: pdf
toc: true
---

## 1. The PDB dababase

The main repository of biomolecular structure data is called the PDB found at: https://www.rcsb.org/ 

Let's see what this data base contains. I went to PDB > Analyze > PDB Statistics > By Experiment Method and Molecular Type

```{r}
pdbstats <- read.csv("Data Export Summary.csv")
pdbstats
```

> Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
pdbstats$X.ray
```

The comma in these numbers is causing them to be read as characters rather than numeric.

I can fix this by replacing "," for nothing "" with the `sub()` function and converting it to numeric:
sub() replaces only the first occurence, gsub() replaces all occurences.
```{r}
x <- pdbstats$X.ray
as.numeric(sub(",","",x))
```


Or I can use the **readr** package and the `read_csv()` function in the tidyverse package:
```{r}
library(readr)
pdbstats <- read_csv("Data Export Summary.csv")
pdbstats
```

I want to clean the column names so that are all lower case and don't have spaces in them using janitor package:
```{r}
colnames(pdbstats)
```

```{r}
library(janitor)

df <- clean_names(pdbstats)
df
```

Total number of X-ray structures:
```{r}
sum(df$x_ray)
```

Total number of structures
```{r}
sum(df$total)
```

Find percent of X-ray structures
```{r}
sum(df$x_ray)/sum(df$total) * 100
```

Percent of EM structures
```{r}
sum(df$em)/sum(df$total) * 100
```

> Q2: What proportion of structures in the PDB are protein?

```{r}
sum(df[1,"total"])/sum(df$total)
```


## 2. Using Mol*

The main Mol* homepage at: http://molstar.org/viewer/. We can input our own PDB files or just give it a PDB database accession code (4 letter PDB code)
> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

Water is only one dot so that it is more simplified and easier to view.


> Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

Water 308


> Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![Molecular view of 1HSG](1HSG.png)


![1HSG Molecular Surface showing ligand binding site](1HSGMolSurface.png)

![1HSG Water 308](1HSGWater308.png)

![1HSP Important Aspartic Acid Residue](1HSGAsp.png)


## 3. Introduction to Bio3D in R

We can use the **bio3D** package for structural bioinformatics to read PDB data into R
```{r}
library(bio3d)

pdb <- read.pdb("1hsg")
pdb
```


> Q7: How many amino acid residues are there in this pdb object? 

```{r}
pdbseq(pdb)
length(pdbseq(pdb))
```


> Q8: Name one of the two non-protein residues? 

MK1

> Q9: How many protein chains are in this structure? 

2 (A and B)


Looking at the `pdb` object in more detail

```{r}
attributes(pdb)
```

```{r}
head(pdb$atom)
```

Let's try a new function not yet in the bio3d package. It requires the **r3dmol** and **shiny** package that we need to install.

```{r}
library(r3dmol)
source("http://tinyurl.com/viewpdb")
#view.pdb(pdb, backgroundColor="lightblue")
```

## 4. Predicting functional dynamics

We can use the `nma()` function in bio3d to predict the large-scale functional motions of biomolecules.

```{r}
adk <- read.pdb("6s36")
adk
```

```{r}
m <- nma(adk)
plot(m)
```

Write out a trajectory of the predicted molecular motion:
```{r}
mktrj(m,file="adk_m7.pdb")
```

